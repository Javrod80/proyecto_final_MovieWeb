openapi: 3.0.0
info:
  title: API de Usuarios
  version: 1.0.0
  description: API para gestionar usuarios
components:
  schemas:
    User:
      type: object
      required:
        - user_name
        - user_lastnames
        - email
        - password
      properties:
        user_name:
          type: string
          description: Nombre del usuario
        user_lastnames:
          type: string
          description: Apellido del usuario
        email:
          type: string
          format: email
          description: Correo electrónico del usuario
        password:
          type: string
          description: Contraseña del usuario
    Error:
      type: object
      properties:
        message:
          type: string
          description: Descripción del error
        error:
          type: string
          description: Tipo de error
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
paths:
  /movieapp/v1/users/signup:
    post:
      tags:
        - Users
      summary: Registrar un nuevo usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
            examples:
              ejemploRegistro:
                summary: Ejemplo de registro de usuario
                value:
                  user_name: "Juan"
                  user_lastnames: "Pérez"
                  email: "juan.perez@example.com"
                  password: "password123"
      responses:
        '200':
          description: Usuario registrado con éxito
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Usuario registrado con éxito"
        '400':
          description: Error en la solicitud
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /movieapp/v1/users/login:
    post:
      tags:
        - Users
      summary: Iniciar sesión de un usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
            examples:
              ejemploLogin:
                summary: Ejemplo de inicio de sesión
                value:
                  email: "juan.perez@example.com"
                  password: "password123"  
      responses:
        '200':
          description: Inicio de sesión exitoso
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        '400':
          description: Error en la solicitud
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /movieapp/v1/users/update-user/{userId}:
    put:
      tags:
        - Users
      summary: Actualizar un usuario
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
            examples:
              ejemploActualizacion:
                summary: Ejemplo de actualización de usuario
                value:
                  password: "nuevaPassword123"
      responses:
        '200':
          description: Usuario actualizado con éxito
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Usuario actualizado con éxito"
        '400':
          description: Error en la solicitud
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /movieapp/v1/users/delete-user/{userId}:
    delete:
      tags:
        - Users
      summary: Eliminar un usuario
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Usuario eliminado con éxito
          content:
            application/json:
              schema:
                type: object
                properties: 
                  message:
                    type: string
                    example: "Usuario eliminado con éxito"
        '400':
          description: Error en la solicitud
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
                

